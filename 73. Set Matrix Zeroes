class Solution {
    public void setZeroes(int[][] matrix) {
        
        int width = matrix[0].length - 1;
        int height = matrix.length - 1;

        //List<List<Integer>> toZero = new ArrayList<List<Integer>>();
        HashSet<Integer> rowToZero = new HashSet<Integer>();
        HashSet<Integer> colToZero = new HashSet<Integer>();

        for (int i = 0; i <= height; i++) {
            for (int j = 0; j <= width; j++) {
                //System.out.println("CK i: " + i + " j: " + j);
                if (matrix[i][j] == 0) {
                    //toZero.add(new ArrayList<Integer>(Arrays.asList(i,j)));
                    rowToZero.add(i);
                    colToZero.add(j);
                    //System.out.println("i: " + i + " j: " + j);
                }
            }
        }
        //System.out.println(rowToZero);
        //System.out.println(colToZero);
        
        for (int rowVal : rowToZero) {
            changeZero(rowVal,true,matrix);
        }
        for (int colVal : colToZero) {
            changeZero(colVal,false,matrix);
        }


    }

    //helper function
    public void changeZero(int number, boolean isRow,int[][] matrix) {
        if (isRow) {
            for (int i = 0; i <= matrix[0].length - 1; i++) {
                //System.out.println("change col " + number + " i:" + i);
                if (matrix[number][i] != 0) {
                    matrix[number][i] = 0;
                }
            }
        }
        else {
            for (int i = 0; i <= matrix.length - 1; i++) {
                //System.out.println("change row " + number + " i:" + i);
                if (matrix[i][number] != 0) {
                    matrix[i][number] = 0;
                }
            }
        }        
    }
}
