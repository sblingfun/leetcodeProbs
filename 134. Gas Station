class Solution {
    public int canCompleteCircuit(int[] gas, int[] cost) {
        int totSurplus = 0;
        int curTank = 0;
        int start = 0;
        
        for (int i = 0; i < gas.length; i++) {
            totSurplus += gas[i] - cost[i];
            curTank += gas[i] - cost[i];

            if (curTank < 0) {
                //reset
                curTank = 0;
                start = i + 1;
            }
        }

        //if totalsurplus is negative solution cant exist
        return (totSurplus < 0) ? -1 : start;

    }
}


//Nested loop Solution
class Solution {
    public int canCompleteCircuit(int[] gas, int[] cost) {
        
        int gasTank = 0;
        for (int i = 0; i < gas.length; i++) {
            gasTank = gas[i];
            int cur = 0;
            int next = 0;
            //System.out.println("i: "+i);
            for (int j = 0; j < gas.length; j++) {
                
                cur = (i + j) % (gas.length);
                next = (i + j + 1) % (gas.length);
                //System.out.println("cur: "+cur+ " gasSub: -" + cost[cur] + " gasAdd: +" + gas[next]);
                //System.out.println("cur:" + cur);
                if (gasTank - cost[cur] < 0) break;
                if (j == gas.length-1) return i;
                gasTank = gasTank - cost[cur] + gas[next];
            }
        }
        return -1;
    }
}
