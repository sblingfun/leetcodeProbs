//My solution sliding window problem 
class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        HashSet<Integer> window = new HashSet<Integer>();

        int j = 0;
        for (int i = 0; i < nums.length; i++) {
            if(!window.add(nums[i])) {
                return true;
            }
            if(window.size() >= k + 1) {
                window.remove(nums[j]);
                j++;
            }
        }
        return false;
    }
}

//Top Leetcode solution
public boolean containsNearbyDuplicate(int[] nums, int k) {
        Set<Integer> set = new HashSet<Integer>();
        for(int i = 0; i < nums.length; i++){
            if(i > k) set.remove(nums[i-k-1]);
            if(!set.add(nums[i])) return true;
        }
        return false;
 }
