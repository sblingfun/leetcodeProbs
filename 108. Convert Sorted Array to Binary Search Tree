class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        //if (nums.length == 1) return new TreeNode(nums[0]);
        return findMid(nums, 0, nums.length - 1);
    }

    private TreeNode findMid(int[] nums, int l, int r) {
        if (l > r) return null;
        int middle = l + (r - l) / 2;
        TreeNode retNode = new TreeNode(nums[middle]);
        retNode.left = findMid(nums, l, middle - 1);
        retNode.right = findMid(nums, middle + 1, r);
        return retNode;
    }
}
